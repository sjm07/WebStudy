@{
    Layout = null;
    ViewBag.Title = "Index";
}
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>table模块快速使用</title>

    <link rel="stylesheet" href="~/Scripts/layui/css/layui.css" media="all">
    <script src="~/Scripts/jquery-1.10.2.min.js"></script>
    <script src="~/Scripts/layui/layui.js"></script>
</head>
<body>
    <script type="text/html" id="toolbarDemo">
        <div class="layui-btn-container">
            <button class="layui-btn layui-btn-sm" lay-event="add">添加</button>
            <button class="layui-btn layui-btn-sm" lay-event="getCheckData">获取选中行数据</button>
            <button class="layui-btn layui-btn-sm" lay-event="getCheckLength">获取选中数目</button>
            <button class="layui-btn layui-btn-sm" lay-event="isAll">验证是否全选</button>
        </div>
    </script>
    <script type="text/html" id="rowToolBar">
        <a class="layui-btn layui-btn-xs" lay-event="detail">查看</a>
        <a class="layui-btn layui-btn-xs" lay-event="edit">编辑</a>
        <a class="layui-btn layui-btn-danger layui-btn-xs" lay-event="del">删除</a>
    </script>

    <table id="demo" lay-filter="test"></table>

    <button type="button" class="layui-btn">
        <i class="layui-icon">&#xe608;</i> 添加
    </button>
    <script>
        layui.use('table', function () {
            var table = layui.table;
            //第一个实例
            table.render({
                elem: '#demo',
                toolbar: '#toolbarDemo'
              , height: 'full-200'
                , url: '/Employee/GetEmployeeData1/' //数据接口
                , page: true //开启分页
              , cols: [[ //表头
                  { type: 'checkbox', fixed: 'left' },
                  { field: 'ID', title: 'ID', width: 80, sort: true, fixed: 'left' },
                                { field: 'NAME', title: '用户名', width: 80 }
                , { field: 'AGE', title: '性别', width: 80, sort: true },
                { fixed: 'right', title: '操作', width: 150, align: 'center', toolbar: '#rowToolBar' } //这里的toolbar值是模板元素的选择器
              ]]
            });

            //监听row工具栏事件
            table.on('tool(test)', function (obj) {
                var rowData = obj.data;
                switch (obj.event) {
                    case 'add':
                        break;
                    case 'del':
                        layer.confirm('确定要删除么?', function (index) {
                            $.ajax({
                                url: '/Employee/Delete/',
                                dataType: "json",
                                type: "POST",
                                data: rowData,
                                beforeSend: function () {
                                    var index = layer.load(1, {
                                        shade: [0.5, '#fff'] //0.1透明度的白色背景
                                    });
                                },
                                complete: function () {
                                    layer.closeAll('loading'); //关闭加载层
                                },
                                success: function (result) {
                                    console.log("result===" + JSON.stringify(result));
                                    if (result.code == 'E000') {
                                        //table.reload('demo');//数据刷新
                                        obj.del(); //删除对应行（tr）的DOM结构，并更新缓存
                                        layer.msg('处理成功');
                                    }
                                    else {
                                        //layer.alert(result.msg, { icon: 0 });
                                    }
                                }
                            });
                            layer.close(index);
                        });
                        break;
                    case 'edit':
                        layui.use('layer', function () {
                            layer.open({
                                type: 2,
                                content: ["/Employee/Employee_Edit?id=" + rowData.ID],
                                area: ["800px", "400px"],
                                title: ['修改'],
                                fixed: false,
                                //maxmin: true,
                                shadeClose: true,
                                end: function () {
                                    location.reload();
                                }
                            })
                        });
                        break;
                };
            });

            //头工具栏事件
            table.on('toolbar(test)', function (obj) {
                var checkStatus = table.checkStatus(obj.config.id);
                switch (obj.event) {
                    case 'add':
                        layui.use('layer', function () {
                            layer.open({
                                type: 2,
                                content: ["/Employee/Employee_Insert"],
                                area: ["800px", "400px"],
                                title: ['新增'],
                                fixed: false,
                                //maxmin: true,
                                shadeClose: true,
                                end: function () {
                                    location.reload();
                                }
                            })
                        });
                        break;
                    case 'getCheckData':
                        var data = checkStatus.data;
                        layer.alert(JSON.stringify(data));
                        break;
                    case 'getCheckLength':
                        var data = checkStatus.data;
                        layer.msg('选中了：' + data.length + ' 个');
                        break;
                    case 'isAll':
                        layer.msg(checkStatus.isAll ? '全选' : '未全选');
                        break;
                };
            });
        });
    </script>
</body>
</html>